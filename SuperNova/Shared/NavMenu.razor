<div class="top-row pl-4 navbar navbar-dark">    
    <a class="navbar-brand" href="">Blazing Spiral</a>
    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <ul class="nav flex-column">
        @if (!IsAuthenticated)
        {
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="Login" Match="NavLinkMatch.All">
                    <span class="oi oi-account-login" aria-hidden="true"></span> Login
                </NavLink>
            </li>
        }
        else
        {
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="/Account">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> Account
                </NavLink>
            </li>
            <li class="nav-item px-3">
                <NavLink class="nav-link" @onclick="Logout" href="/Login">
                    <span class="oi oi-account-logout" aria-hidden="true"></span> Logout
                </NavLink>
            </li>
        }
    </ul>
</div>

@code {

    [Parameter]
    public bool IsAuthenticated { get; set; }

    [Parameter]
    public EventCallback<bool> LogoutEvent { get; set; }

    private bool collapseNavMenu = true;

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;       

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private async Task Logout()
    {        
        await LogoutEvent.InvokeAsync(true);
    }
}
